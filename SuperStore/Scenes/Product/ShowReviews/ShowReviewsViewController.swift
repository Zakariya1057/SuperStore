//
//  ShowReviewsViewController.swift
//  SuperStore
//
//  Created by Zakariya Mohummed on 28/02/2021.
//  Copyright (c) 2021 Zakariya Mohummed. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ShowReviewsDisplayLogic: class
{
    func displayReviews(viewModel: ShowReviews.GetReviews.ViewModel)
}

class ShowReviewsViewController: UIViewController, ShowReviewsDisplayLogic
{
    var interactor: ShowReviewsBusinessLogic?
    var router: (NSObjectProtocol & ShowReviewsRoutingLogic & ShowReviewsDataPassing)?
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup()
    {
        let viewController = self
        let interactor = ShowReviewsInteractor()
        let presenter = ShowReviewsPresenter()
        let router = ShowReviewsRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
    {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        registerReviewsTableView()
        getReviews()
    }
    
    // MARK: Do something
    
    var loading: Bool = false
    
    var reviews: [ReviewModel] = []
    @IBOutlet var reviewsTableView: UITableView!
    
    func getReviews()
    {
        let request = ShowReviews.GetReviews.Request()
        interactor?.getReviews(request: request)
    }
    
    func displayReviews(viewModel: ShowReviews.GetReviews.ViewModel)
    {
        reviews = viewModel.reviews
        reviewsTableView.reloadData()
    }
}

extension ShowReviewsViewController: UITableViewDataSource, UITableViewDelegate {
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return reviews.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        return configureReviewCell(indexPath: indexPath)
    }
    
    func configureReviewCell(indexPath: IndexPath) -> ReviewCell {
        let cell = reviewsTableView.dequeueReusableCell(withIdentifier: "ReviewCell", for: indexPath) as! ReviewCell
        
        if loading == false {
            
            if reviews.count > 0 {
                cell.review = reviews[indexPath.row]
            }
            
            cell.configureUI()
            
        } else {
            cell.startLoading()
        }
        
        cell.selectionStyle = UITableViewCell.SelectionStyle.none
        
        return cell
    }
    
    func registerReviewsTableView(){
        let reviewCellNib = UINib(nibName: "ReviewCell", bundle: nil)
        reviewsTableView.register(reviewCellNib, forCellReuseIdentifier: "ReviewCell")
        
        reviewsTableView.delegate = self
        reviewsTableView.dataSource = self
    }
}
