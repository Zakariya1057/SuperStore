//
//  ShowProductPresenter.swift
//  SuperStore
//
//  Created by Zakariya Mohummed on 27/02/2021.
//  Copyright (c) 2021 Zakariya Mohummed. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ShowProductPresentationLogic
{
    func presentProduct(response: ShowProduct.GetProduct.Response)
    func presentFavourite(response: ShowProduct.UpdateFavourite.Response)
    func presentMonitoring(response: ShowProduct.UpdateMonitoring.Response)
}

class ShowProductPresenter: ShowProductPresentationLogic
{
    weak var viewController: ShowProductDisplayLogic?
    
    // MARK: Do something
    
    func presentProduct(response: ShowProduct.GetProduct.Response)
    {
        
        var displayedProduct: ShowProduct.DisplayedProduct?
        
        if let product = response.product {
            displayedProduct = ShowProduct.DisplayedProduct(
                id: product.id,
                name: product.name,
                price: "Â£\( String(format: "%.2f", product.price) )",
                promotion: product.promotion,
                largeImage: product.largeImage,
                description: product.description ?? "",
                favourite: product.favourite,
                monitoring: product.monitoring,
                avgRating: product.avgRating,
                totalReviewsCount: product.totalReviewsCount,
                storage: product.storage,
                weight: product.weight,
                dietaryInfo: product.dietaryInfo,
                allergenInfo: product.allergenInfo,
                review: product.reviews.first,
                ingredients: product.ingredients,
                recommended: product.recommended)
        }
        
        
        let viewModel = ShowProduct.GetProduct.ViewModel(displayedProduct: displayedProduct, error: response.error)
        viewController?.displayProduct(viewModel: viewModel)
        
    }
    
    func presentFavourite(response: ShowProduct.UpdateFavourite.Response){
        let viewModel = ShowProduct.UpdateFavourite.ViewModel(error: response.error)
        viewController?.displayFavourite(viewModel: viewModel)
    }
    
    func presentMonitoring(response: ShowProduct.UpdateMonitoring.Response){
        let viewModel = ShowProduct.UpdateMonitoring.ViewModel(error: response.error)
        viewController?.displayMonitoring(viewModel: viewModel)
    }
}
