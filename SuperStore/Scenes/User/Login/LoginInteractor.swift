//
//  LoginInteractor.swift
//  SuperStore
//
//  Created by Zakariya Mohummed on 25/02/2021.
//  Copyright (c) 2021 Zakariya Mohummed. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import AuthenticationServices

protocol LoginBusinessLogic
{
    func login(request: Login.Login.Request)
    func appleLogin(request: Login.AppleLogin.Request)
}

protocol LoginDataStore
{
    var email: String? { get set }
}

class LoginInteractor: LoginBusinessLogic, LoginDataStore
{
    var presenter: LoginPresentationLogic?
    var authWorker: UserAuthWorker = UserAuthWorker(userAuth: UserAuthAPI())
    
    var loginWorker: LoginWorker = LoginWorker()
    
    var validationWorker: UserValidationWorker = UserValidationWorker()
    
    var email: String?
    
    func login(request: Login.Login.Request)
    {
        let email = request.email
        let password = request.password

        self.email = email
        
        let formFields: [UserFormField] = [
            UserFormField(name: "Email", value: email, type: .email),
            UserFormField(name: "Password", value: password, type: .password)
        ]
        
        let error = validationWorker.validateFields(formFields)

        if let error = error {
            self.presenter?.presentLogin(response: Login.Login.Response(error: error))
        } else {
            authWorker.login(email: email, password: password, completionHandler: loginCompletionHandler)
        }
        
    }
    
    func appleLogin(request: Login.AppleLogin.Request){
        let appleIDCredential: ASAuthorizationAppleIDCredential = request.appleIDCredential
        
        let user = loginWorker.appleLogin(appleIDCredential: appleIDCredential)
        
        if let userHistory = user {
            let name = userHistory.name
            let email = userHistory.email
            let password = loginWorker.generatePassword()
            let identifier = userHistory.identifier
            let userToken = userHistory.userToken
            
            authWorker.register(
                name: name,
                email: email,
                password: password,
                passwordConfirmation: password,
                identifier: identifier,
                userToken: userToken,
                completionHandler: loginCompletionHandler
            )
            
        } else {
            // Apple Login Failed. Show Error
            self.presenter?.presentLogin(response: Login.Login.Response(error: "Apple login failed. Please try logging in with email."))
        }
    }
    
    private func loginCompletionHandler(user: UserModel?, error: String?){
        self.presenter?.presentLogin(response: Login.Login.Response(error: error))
    }
}
