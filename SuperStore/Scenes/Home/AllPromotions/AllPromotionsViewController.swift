//
//  AllPromotionsViewController.swift
//  SuperStore
//
//  Created by Zakariya Mohummed on 07/05/2021.
//  Copyright (c) 2021 Zakariya Mohummed. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol AllPromotionsDisplayLogic: AnyObject
{
    func displayPromotions(viewModel: AllPromotions.GetAllPromotions.ViewModel)
}

class AllPromotionsViewController: UIViewController, AllPromotionsDisplayLogic
{
    var interactor: AllPromotionsBusinessLogic?
    var router: (NSObjectProtocol & AllPromotionsRoutingLogic & AllPromotionsDataPassing)?
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup()
    {
        let viewController = self
        let interactor = AllPromotionsInteractor()
        let presenter = AllPromotionsPresenter()
        let router = AllPromotionsRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
    {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        setupCollectionView()
        getPromotions()
    }
    
    var loading: Bool = false
    var promotions: [PromotionModel] = []
    
    @IBOutlet var offersCollectionView: UICollectionView!
    
    func getPromotions()
    {
        let request = AllPromotions.GetAllPromotions.Request()
        interactor?.getAllPromotions(request: request)
    }
    
    func displayPromotions(viewModel: AllPromotions.GetAllPromotions.ViewModel)
    {
        if let error = viewModel.error {
            showError(title: "Offers Error", error: error)
        } else {
            promotions = viewModel.promotions
            offersCollectionView.reloadData()
        }
    }
    
}

extension AllPromotionsViewController: UICollectionViewDelegate, UICollectionViewDataSource {
    func setupCollectionView(){
        offersCollectionView.register(UINib(nibName: "OfferCollectionViewCell", bundle: nil), forCellWithReuseIdentifier: "OfferCollectionViewCell")
        offersCollectionView.delegate = self
        offersCollectionView.dataSource = self
    }
    
    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
        return loading ? 4 : promotions.count
    }
    
    func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
        let cell = offersCollectionView.dequeueReusableCell(withReuseIdentifier: "OfferCollectionViewCell", for: indexPath) as! OfferCollectionViewCell
        
        cell.promotion = loading ? nil : promotions[indexPath.row]
        
        cell.loading = loading
        cell.configureUI()
        return cell
    }
    
    func collectionView(_ collectionView: UICollectionView, didSelectItemAt indexPath: IndexPath) {
        let promotion = promotions[indexPath.row]
        
        interactor?.setPromotionSelected(promotionID: promotion.id)
        router?.routeToShowPromotion(segue: nil)
    }
}
