//
//  AllPromotionsInteractor.swift
//  SuperStore
//
//  Created by Zakariya Mohummed on 07/05/2021.
//  Copyright (c) 2021 Zakariya Mohummed. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol AllPromotionsBusinessLogic
{
    func getAllPromotions(request: AllPromotions.GetAllPromotions.Request)
    func setPromotionSelected(promotionGroup: PromotionGroupModel)
}

protocol AllPromotionsDataStore
{
    var selectedPromotionGroup: PromotionGroupModel? { get set }
}

class AllPromotionsInteractor: AllPromotionsBusinessLogic, AllPromotionsDataStore
{
    
    var presenter: AllPromotionsPresentationLogic?
    var promotionWorker = PromotionWorker(promotionAPI: PromotionAPI())
    
    var selectedPromotionGroup: PromotionGroupModel? = nil
    
    var userSession: UserSessionWorker = UserSessionWorker()
    
    var storeTypeID: Int {
        userSession.getStore()
    }
    
    var regionID: Int {
        userSession.getRegion()
    }
    
    func getAllPromotions(request: AllPromotions.GetAllPromotions.Request)
    {
        promotionWorker.getAllPromotions(regionID: regionID, storeTypeID: storeTypeID) { (promotionGroups: [PromotionGroupModel], error: String?) in
            
            var response = AllPromotions.GetAllPromotions.Response(promotionGroups: promotionGroups, error: error)
        
            if error != nil {
                response.offline = !self.userSession.isOnline()
            }
            
            self.presenter?.presentAllPromotions(response: response)
        }
    }
}

extension AllPromotionsInteractor {
    public func setPromotionSelected(promotionGroup: PromotionGroupModel){
        self.selectedPromotionGroup = promotionGroup
    }
}
