//
//  AllPromotionsInteractor.swift
//  SuperStore
//
//  Created by Zakariya Mohummed on 07/05/2021.
//  Copyright (c) 2021 Zakariya Mohummed. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol PromotionGroupBusinessLogic
{
    func getPromotionGroupName(request: PromotionGroup.GetPromotionGroup.Request)
    func getPromotions(request: PromotionGroup.GetPromotions.Request)
    func setProductSelected(productID: Int)
}

protocol PromotionGroupDataStore
{
    var storeTypeID: Int { get set }
    var promotionGroup: PromotionGroupModel? { get set }
    var selectedProductID: Int? { get set }
}

class PromotionGroupInteractor: PromotionGroupBusinessLogic, PromotionGroupDataStore
{
    
    var presenter: PromotionGroupPresentationLogic?

    var promotionGroup: PromotionGroupModel? = nil
   
    var storeTypeID: Int = 2
    var selectedProductID: Int?
    
    var promotionWorker = PromotionWorker(promotionAPI: PromotionAPI())
    var userSession: UserSessionWorker = UserSessionWorker()
    
    var regionID: Int {
        return userSession.getRegion()
    }
    
    func getPromotions(request: PromotionGroup.GetPromotions.Request)
    {
        
        if let promotionGroup = promotionGroup {
            promotionWorker.getPromotionGroup(regionID: regionID ,storeTypeID: storeTypeID, title: promotionGroup.title) { (promotions: [PromotionModel], error: String?) in
                var response = PromotionGroup.GetPromotions.Response(promotions: promotions, error: error)
                
                if error != nil {
                    response.offline = !self.userSession.isOnline()
                }
                
                self.presenter?.presentAllPromotions(response: response)
            }
        }
    }
    
    func getPromotionGroupName(request: PromotionGroup.GetPromotionGroup.Request) {
        if let promotionGroup = promotionGroup {
            let response = PromotionGroup.GetPromotionGroup.Response(promotionGroup: promotionGroup)
            self.presenter?.presentPromotionGroupName(response: response)
        }
    }
}

extension PromotionGroupInteractor {
    public func setProductSelected(productID: Int){
        self.selectedProductID = productID
    }
}
