//
//  SettingsModels.swift
//  SuperStore
//
//  Created by Zakariya Mohummed on 03/03/2021.
//  Copyright (c) 2021 Zakariya Mohummed. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

enum Settings
{
    // MARK: Use cases
    
    struct DisplayUserSection {
        var title: String = ""
        var fields: [DisplayUserField]
    }
    
    struct DisplayUserField {
        var name: String
        var value: String? = nil
        var type: DisplayUserFieldType
    }
    
    enum DisplayUserFieldType {
        case name, email, store, password, notification, logout, feedback, issue
    }
    
    enum GetUserDetails
    {
        struct Request
        {
        }
        
        struct Response
        {
            var user: UserModel?
        }
        
        struct ViewModel
        {

            var displayUserSections: [DisplayUserSection]
            
//            var displayUserFields: [DisplayUserField]
//            struct DisplayedUser {
//                var name: String
//                var email: String
//                var storeName: String
//                var sendNotifications: Bool
//            }
//
//            var displayedUser: DisplayedUser?
            
            var loggedIn: Bool
            var error: String?
        }
    }
    
    enum GetStore
    {
        struct Request
        {
        }
        struct Response
        {
            var storeTypeID: Int
        }
        struct ViewModel
        {
            var storeName: String
        }
    }
    
    enum UpdateNotifications
    {
        struct Request
        {
            var sendNotifications: Bool
        }
        
        struct Response
        {
            var error: String?
        }
        
        struct ViewModel
        {
            var error: String?
        }
    }
    
    enum Logout
    {
        struct Request
        {
        }
        
        struct Response
        {
            var error: String?
        }
        
        struct ViewModel
        {
            var error: String?
        }
    }
    
    enum Delete
    {
        struct Request
        {
        }
        
        struct Response
        {
            var error: String?
        }
        
        struct ViewModel
        {
            var error: String?
        }
    }
}
