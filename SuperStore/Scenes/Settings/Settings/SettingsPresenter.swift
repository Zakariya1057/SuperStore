//
//  SettingsPresenter.swift
//  SuperStore
//
//  Created by Zakariya Mohummed on 03/03/2021.
//  Copyright (c) 2021 Zakariya Mohummed. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SettingsPresentationLogic
{
    func presentUserDetails(response: Settings.GetUserDetails.Response)
    func presentLogout(response: Settings.Logout.Response)
}

class SettingsPresenter: SettingsPresentationLogic
{
    weak var viewController: SettingsDisplayLogic?
    
    func presentUserDetails(response: Settings.GetUserDetails.Response)
    {
        var displayUserSections: [Settings.DisplayUserSection] = []
        
        var loggedIn: Bool = false
        
        if let user = response.user {
            
            let unreadMessagesCount: Int = response.unreadMessagesCount
            
            if user.token != "" {
                
                loggedIn = true

                displayUserSections.append(contentsOf: [
                    Settings.DisplayUserSection(settings: [
                        SettingModel(name: "User Management", type: .userManagement),
                    ]),
                    
                    Settings.DisplayUserSection(settings: [
                        SettingModel(name: "Regions & Stores", type: .regionAndSupermarketChain)
                    ]),
                    
                    Settings.DisplayUserSection(settings: [
                        SettingModel(name: "Device Storage", type: .deviceStorage)
                    ]),
                    
                    Settings.DisplayUserSection(settings: [
                        SettingModel(name: "Help & Feedback", type: .helpAndFeedback, badgeNumber: unreadMessagesCount)
                    ]),
                    
                ])
                
                displayUserSections.append(
                    Settings.DisplayUserSection(settings: [
                        SettingModel(name: "Logout", type: .logout)
                    ])
                )
            } else {
                displayUserSections.append(contentsOf: [
                    Settings.DisplayUserSection(settings: [
                        SettingModel(name: "Regions & Stores", type: .regionAndSupermarketChain)
                    ]),
                    
                    Settings.DisplayUserSection(settings: [
                        SettingModel(name: "Login", type: .login)
                    ]),
                    
                    Settings.DisplayUserSection(settings: [
                        SettingModel(name: "Help & Feedback", type: .helpAndFeedback)
                    ])
                ])
            }
        }
        
        let viewModel = Settings.GetUserDetails.ViewModel(displayUserSections: displayUserSections, loggedIn: loggedIn)
        
        viewController?.displayUserDetails(viewModel: viewModel)
    }

    func presentLogout(response: Settings.Logout.Response) {
        let viewModel = Settings.Logout.ViewModel(error: response.error)
        viewController?.displayedLogout(viewModel: viewModel)
    }
}
