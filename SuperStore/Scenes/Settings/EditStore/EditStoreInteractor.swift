//
//  EditStoreInteractor.swift
//  SuperStore
//
//  Created by Zakariya Mohummed on 07/03/2021.
//  Copyright (c) 2021 Zakariya Mohummed. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol EditStoreBusinessLogic
{
    func updateStore(request: EditStore.UpdateStore.Request)
    func getSupermarketChains(request: EditStore.GetStoreTypes.Request)
}

protocol EditStoreDataStore
{
    //var name: String { get set }
}

class EditStoreInteractor: EditStoreBusinessLogic, EditStoreDataStore
{
    var presenter: EditStorePresentationLogic?
    
    var userSessionWorker: UserSessionWorker = UserSessionWorker()
    var userWorker: UserSettingsWorker = UserSettingsWorker(userStore: UserRealmStore())
    
    var supermarketChainWorker: SupermarketChainWorker = SupermarketChainWorker()
    
    func getSupermarketChains(request: EditStore.GetStoreTypes.Request){
        let supermarketChain = supermarketChainWorker.getSupermarketChains()
        
        let selectedsupermarketChainID: Int = supermarketChainWorker.getSelectedSupermarketChain().id
        
        let response = EditStore.GetStoreTypes.Response(supermarketChain: supermarketChain, selectedsupermarketChainID: selectedsupermarketChainID)
        presenter?.presentStoreTypes(response: response)
    }
    
    func updateStore(request: EditStore.UpdateStore.Request)
    {
        let supermarketChainID = request.supermarketChain.id
        
        let loggedIn: Bool = userSessionWorker.isLoggedIn()
        
        userWorker.updateStore(supermarketChainID: supermarketChainID, loggedIn: loggedIn) { (error: String?) in
            let response = EditStore.UpdateStore.Response(error: error)
            self.presenter?.presentUpdatedStore(response: response)
        }
    }
}
