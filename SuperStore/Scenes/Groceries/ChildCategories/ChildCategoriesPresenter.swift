//
//  ChildCategoriesPresenter.swift
//  SuperStore
//
//  Created by Zakariya Mohummed on 03/03/2021.
//  Copyright (c) 2021 Zakariya Mohummed. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ChildCategoriesPresentationLogic
{
    func presentCategories(response: ChildCategories.GetCategories.Response)
    
    func presentListItems(response: ChildCategories.GetListItems.Response)
    func presentListItemCreated(response: ChildCategories.CreateListItem.Response)
    func presentListItemUpdated(response: ChildCategories.UpdateListItem.Response)
}

class ChildCategoriesPresenter: ChildCategoriesPresentationLogic
{
    weak var viewController: ChildCategoriesDisplayLogic?

    func presentCategories(response: ChildCategories.GetCategories.Response)
    {
        let viewModel = ChildCategories.GetCategories.ViewModel(
            title: response.title,
            categories: response.categories,
            error: response.error,
            offline: response.offline
        )
        
        viewController?.displayCategories(viewModel: viewModel)
    }
    
}

extension ChildCategoriesPresenter {
    func presentListItems(response: ChildCategories.GetListItems.Response) {
        var listItems: [Int : ListItemModel] = [:]
        
        response.listItems.forEach { (listItem: ListItemModel) in
            listItems[listItem.productID] = listItem
        }
        
        let viewModel = ChildCategories.GetListItems.ViewModel(listItems: listItems)
        viewController?.displayListItems(viewModel: viewModel)
    }
    
    func presentListItemCreated(response: ChildCategories.CreateListItem.Response) {
        let viewModel = ChildCategories.CreateListItem.ViewModel(
            section: response.section,
            listItem: response.listItem,
            error: response.error,
            offline: response.offline
        )
        
        viewController?.displayListItemCreated(viewModel: viewModel)
    }
    
    func presentListItemUpdated(response: ChildCategories.UpdateListItem.Response) {
        let viewModel = ChildCategories.UpdateListItem.ViewModel(error: response.error, offline: response.offline)
        viewController?.displayListItemUpdated(viewModel: viewModel)
    }
}
