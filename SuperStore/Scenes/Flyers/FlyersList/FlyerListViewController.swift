//
//  FlyerListViewController.swift
//  SuperStore
//
//  Created by Zakariya Mohummed on 23/05/2021.
//  Copyright (c) 2021 Zakariya Mohummed. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol FlyerListDisplayLogic: AnyObject
{
    func displayFlyers(viewModel: FlyerList.GetFlyers.ViewModel)
}

class FlyerListViewController: UIViewController, FlyerListDisplayLogic
{
    var interactor: FlyerListBusinessLogic?
    var router: (NSObjectProtocol & FlyerListRoutingLogic & FlyerListDataPassing)?
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup()
    {
        let viewController = self
        let interactor = FlyerListInteractor()
        let presenter = FlyerListPresenter()
        let router = FlyerListRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
    {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        setupFlyersTable()
        getFlyers()
    }
    
    var flyers: [FlyerModel] = []
    var loading: Bool = true
    
    var refreshControl = UIRefreshControl()
    
    @IBOutlet var flyersTableView: UITableView!
    
    @objc func getFlyers()
    {
        let request = FlyerList.GetFlyers.Request()
        interactor?.getFlyers(request: request)
    }
    
    func displayFlyers(viewModel: FlyerList.GetFlyers.ViewModel)
    {
        if let error = viewModel.error {
            showError(title: "Flyers Error", error: error)
        } else {
            refreshControl.endRefreshing()
            
            loading = false
            flyers = viewModel.flyers
            flyersTableView.reloadData()
        }
    }
}


extension FlyerListViewController: UITableViewDataSource, UITableViewDelegate {
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return loading ? 4 : flyers.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        return configureFlyerCell(indexPath: indexPath)
    }
    
    func configureFlyerCell(indexPath: IndexPath) -> CategoryTableViewCell {
        let cell = flyersTableView.dequeueReusableCell(withIdentifier: "CategoryTableViewCell", for: indexPath) as! CategoryTableViewCell
        
        cell.nameLabel.text = loading ? nil : flyers[indexPath.row].name
        cell.loading = loading
        
        cell.selectionStyle = UITableViewCell.SelectionStyle.none
        return cell
    }
    
    func setupFlyersTable(){
        let categoryCellNib = UINib(nibName: "CategoryTableViewCell", bundle: nil)
        flyersTableView.register(categoryCellNib, forCellReuseIdentifier: "CategoryTableViewCell")
        
        flyersTableView.delegate = self
        flyersTableView.dataSource = self
        
        setupRefreshControl()
    }
    
    
    func setupRefreshControl(){
        refreshControl.attributedTitle = NSAttributedString(string: "Pull To Refresh")
        refreshControl.addTarget(self, action: #selector(getFlyers), for: .valueChanged)
        flyersTableView.addSubview(refreshControl)
    }
}
    
extension FlyerListViewController {
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        if !loading {
            let flyer = flyers[indexPath.row]
            interactor?.flyerSelected(flyer: flyer)
            
            router?.routeToShowFlyer(segue: nil)
        }
    }
}
