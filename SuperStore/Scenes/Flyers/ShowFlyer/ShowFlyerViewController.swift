//
//  ShowFlyerViewController.swift
//  SuperStore
//
//  Created by Zakariya Mohummed on 23/05/2021.
//  Copyright (c) 2021 Zakariya Mohummed. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import PDFKit

protocol ShowFlyerDisplayLogic: AnyObject
{
    func displayFlyer(viewModel: ShowFlyer.GetFlyer.ViewModel.DisplayedFlyer)
}

class ShowFlyerViewController: UIViewController, ShowFlyerDisplayLogic
{
    var interactor: ShowFlyerBusinessLogic?
    var router: (NSObjectProtocol & ShowFlyerRoutingLogic & ShowFlyerDataPassing)?
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup()
    {
        let viewController = self
        let interactor = ShowFlyerInteractor()
        let presenter = ShowFlyerPresenter()
        let router = ShowFlyerRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
    {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        getFlyer()
    }
    
    @IBOutlet weak var pdfView: PDFView!
    @IBOutlet var validDateLabel: UILabel!
    
    func getFlyer()
    {
        startLoading()
        
        let request = ShowFlyer.GetFlyer.Request()
        interactor?.getFlyer(request: request)
    }
    
    func displayFlyer(viewModel: ShowFlyer.GetFlyer.ViewModel.DisplayedFlyer)
    {
        title = viewModel.name
        displayValidDate(dateRange: viewModel.validDate)
        
        DispatchQueue.main.async {
            self.showPDF(url: viewModel.url)
            self.stopLoading()
        }
    }
    
    private func displayValidDate(dateRange: String){
        validDateLabel.text = "Valid From \(dateRange)"
    }
    
    private func showPDF(url: String){
        if let url = URL(string: url) {
            if let pdfDocument = PDFDocument(url: url) {
                pdfView.displayMode = .singlePageContinuous
                pdfView.autoScales = true
                pdfView.document = pdfDocument
            }
        }
    }
}

extension ShowFlyerViewController {
    func startLoading(){
        pdfView.isSkeletonable = true
        pdfView.showAnimatedGradientSkeleton()
    }
    
    func stopLoading(){
        pdfView.hideSkeleton()
    }
}
