//
//  ShowFlyerViewController.swift
//  SuperStore
//
//  Created by Zakariya Mohummed on 23/05/2021.
//  Copyright (c) 2021 Zakariya Mohummed. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import WebKit

protocol ShowFlyerDisplayLogic: AnyObject
{
    func displayFlyer(viewModel: ShowFlyer.GetFlyer.ViewModel)
}

class ShowFlyerViewController: UIViewController, ShowFlyerDisplayLogic
{
    var interactor: ShowFlyerBusinessLogic?
    var router: (NSObjectProtocol & ShowFlyerRoutingLogic & ShowFlyerDataPassing)?
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup()
    {
        let viewController = self
        let interactor = ShowFlyerInteractor()
        let presenter = ShowFlyerPresenter()
        let router = ShowFlyerRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
    {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        getFlyer()
    }
    
    @IBOutlet var webView: WKWebView!
    
    func getFlyer()
    {
        let request = ShowFlyer.GetFlyer.Request()
        interactor?.getFlyer(request: request)
    }
    
    func displayFlyer(viewModel: ShowFlyer.GetFlyer.ViewModel)
    {
        let flyer = viewModel.flyer
        
        title = flyer.name
        
        let url: URL! = URL(string: flyer.url)
        let urlRequest = URLRequest(url: url)
        
        webView.load(urlRequest)
    }
}
