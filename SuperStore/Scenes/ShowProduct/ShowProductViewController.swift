//
//  ShowProductViewController.swift
//  SuperStore
//
//  Created by Zakariya Mohummed on 27/02/2021.
//  Copyright (c) 2021 Zakariya Mohummed. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Cosmos

protocol ShowProductDisplayLogic: class
{
    func displayProduct(viewModel: ShowProduct.GetProduct.ViewModel)
}

class ShowProductViewController: UIViewController, ShowProductDisplayLogic
{
    var interactor: ShowProductBusinessLogic?
    var router: (NSObjectProtocol & ShowProductRoutingLogic & ShowProductDataPassing)?
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup()
    {
        let viewController = self
        let interactor = ShowProductInteractor()
        let presenter = ShowProductPresenter()
        let router = ShowProductRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
    {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        getProduct()
    }
    
    // MARK: IB Outlets
    
    @IBOutlet var addButton: UIButton!
    @IBOutlet var stepperStackView: UIStackView!
    
    @IBOutlet var quantityStepper: UIStepper!
    @IBOutlet var stepperLabel: UILabel!
    
    @IBOutlet weak var reviewsStackView: UIStackView!
    @IBOutlet weak var ingredientsView: UIView!
    @IBOutlet weak var descriptionView: UIView!
    @IBOutlet weak var allReviewsView: UIView!
    
    @IBOutlet weak var allReviewsButton: UIButton!
    
    @IBOutlet weak var dietaryView: UIStackView!
    @IBOutlet weak var allergenView: UIStackView!
    @IBOutlet weak var promotionView: UIView!
    @IBOutlet weak var favouriteBarItem: UIBarButtonItem!
    
    // Field Labels
    @IBOutlet weak var nameLabel: UILabel!
    @IBOutlet weak var priceLabel: UILabel!
    @IBOutlet weak var weightLabel: UILabel!
    @IBOutlet weak var imageView: UIImageView!
    @IBOutlet weak var lifeStyleLabel: UILabel!
    @IBOutlet weak var allergenLabel: UILabel!
    @IBOutlet weak var reviewButton: UIButton!
    
    @IBOutlet weak var promotionLabel: UILabel!
    @IBOutlet weak var ratingView: CosmosView!
    @IBOutlet weak var parentRatingView: UIView!
    
    @IBOutlet weak var reviewsTableView: UITableView!
    
    @IBOutlet weak var monitorButton: UIButton!
    @IBOutlet weak var similarTableView: UITableView!
    @IBOutlet weak var addToListButton: UIButton!
    
    
    //MARK: - Display
    
    func displayProduct(viewModel: ShowProduct.GetProduct.ViewModel)
    {
        if let product = viewModel.product {
            nameLabel.text = product.name
            priceLabel.text = "Â£\( String(format: "%.2f", product.price) )" // Currency Change Here
            weightLabel.text = product.weight
        }
    }
    
    func getProduct()
    {
        let request = ShowProduct.GetProduct.Request()
        interactor?.getProduct(request: request)
    }
    
}

extension ShowProductViewController {
    @IBAction func monitorButtonPressed(_ sender: Any) {
    
    }
    
    @IBAction func favouriteButtonPressed(_ sender: Any) {
    }
    
    @IBAction func addToListButtonPressed(_ sender: Any) {
    
    }
    
    @IBAction func allReviewButtonPressed(_ sender: Any) {
    }
    
    @IBAction func quantityStepperPressed(_ sender: Any) {
    
    }
}
