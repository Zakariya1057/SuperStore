//
//  FavouritesInteractor.swift
//  SuperStore
//
//  Created by Zakariya Mohummed on 01/03/2021.
//  Copyright (c) 2021 Zakariya Mohummed. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol FavouritesBusinessLogic
{
    func getFavourites(request: Favourites.GetFavourites.Request)
    func deleteFavourite(request: Favourites.DeleteFavourite.Request)
}

protocol FavouritesDataStore
{
    
}

class FavouritesInteractor: FavouritesBusinessLogic, FavouritesDataStore
{
    var presenter: FavouritesPresentationLogic?
    var favouriteWorker: FavouriteWorker = FavouriteWorker(favouriteAPI: FavouriteAPI())
    
    var userSession = UserSessionWorker()
    
    func getFavourites(request: Favourites.GetFavourites.Request)
    {
        favouriteWorker.getFavourites { (products: [ProductModel], error: String?) in
            var response = Favourites.GetFavourites.Response(products: products, error: error)
            
            if error != nil {
                response.offline = !self.userSession.isOnline()
            }
            
            self.presenter?.presentFavourites(response: response)
        }
    }
    
    func deleteFavourite(request: Favourites.DeleteFavourite.Request){
        favouriteWorker.deleteFavourite(productID: request.productID){ (error: String?) in
            let response = Favourites.DeleteFavourite.Response( error: error)
            self.presenter?.presentDeleteFavourite(response: response)
        }
    }
}
