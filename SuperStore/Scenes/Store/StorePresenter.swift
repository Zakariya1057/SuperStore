//
//  StorePresenter.swift
//  SuperStore
//
//  Created by Zakariya Mohummed on 02/03/2021.
//  Copyright (c) 2021 Zakariya Mohummed. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol StorePresentationLogic
{
    func presentStore(response: Store.GetStore.Response)
}

class StorePresenter: StorePresentationLogic
{
    weak var viewController: StoreDisplayLogic?
    
    // MARK: Do something
    
    func presentStore(response: Store.GetStore.Response)
    {
        
        var displayedStore: Store.GetStore.ViewModel.DisplayedStore?
        
        if let store = response.store {
            let address = createAddress(location: store.location)
            let openingHours = createOpeningHours(openingHour: store.openingHours)
            displayedStore = Store.GetStore.ViewModel.DisplayedStore(name: store.name, logo: store.logo, address: address, openingHours: openingHours)
        }
        
        let viewModel = Store.GetStore.ViewModel(displayedStore: displayedStore, error: response.error)
        viewController?.displayStore(viewModel: viewModel)
    }
    
    private func createAddress(location: LocationModel) -> String {
        let addressItems = [location.addressLine1, location.addressLine2, location.addressLine3, location.city ]
        return addressItems.compactMap { $0 }.joined(separator: ", ")
    }
    
    private func createOpeningHours(openingHour: [OpeningHoursModel]) -> [Store.GetStore.ViewModel.DisplayOpeningHour]{
        var displayOpeningHours: [Store.GetStore.ViewModel.DisplayOpeningHour] = []
        
        let dayOfWeek = getDayOfWeek()
        
        for hour in openingHour {
            let openTimes: String = "\(hour.opensAt!) - \(hour.closesAt!)".lowercased()
            let today = dayOfWeek == hour.dayOfWeek
            
            let displayOpeningHour = Store.GetStore.ViewModel.DisplayOpeningHour(today: today, hours: openTimes, closedToday: hour.closedToday)
            displayOpeningHours.append(displayOpeningHour)
        }
        
        return displayOpeningHours
    }
    
    private func getDayOfWeek() -> Int {
        var dayOfWeek = Calendar.current.component(.weekday, from: Date()) - 2
        if dayOfWeek == -1 {
            dayOfWeek = 6
        }
        
        return dayOfWeek
    }
}
