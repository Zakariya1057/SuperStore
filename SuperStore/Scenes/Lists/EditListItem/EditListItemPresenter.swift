//
//  EditListItemPresenter.swift
//  SuperStore
//
//  Created by Zakariya Mohummed on 05/03/2021.
//  Copyright (c) 2021 Zakariya Mohummed. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol EditListItemPresentationLogic
{
    func presentListItem(response: EditListItem.GetListItem.Response)
    func presentListItemDeleted(response: EditListItem.DeleteListItem.Response)
    func presentListItemUpdated(response: EditListItem.UpdateListItem.Response)
    func presentListItemQuantityUpdated(response: EditListItem.UpdateQuantity.Response)
}

class EditListItemPresenter: EditListItemPresentationLogic
{

    weak var viewController: EditListItemDisplayLogic?
    
    func presentListItem(response: EditListItem.GetListItem.Response)
    {
        let viewModel = EditListItem.GetListItem.ViewModel(displayedListItem: createDisplayedListItem(listItem: response.listItem))
        viewController?.displayListItem(viewModel: viewModel)
    }
    
    func presentListItemUpdated(response: EditListItem.UpdateListItem.Response) {
        let viewModel = EditListItem.UpdateListItem.ViewModel(error: response.error, offline: response.offline)
        viewController?.displayListItemUpdate(viewModel: viewModel)
    }
    
    func presentListItemQuantityUpdated(response: EditListItem.UpdateQuantity.Response) {
        let viewModel = EditListItem.UpdateQuantity.ViewModel(displayedListItem: createDisplayedListItem(listItem: response.listItem))
        viewController?.displayUpdateQuantity(viewModel: viewModel)
    }
    
    func presentListItemDeleted(response: EditListItem.DeleteListItem.Response){
        let viewModel = EditListItem.DeleteListItem.ViewModel(error: response.error, offline: response.offline)
        viewController?.displayListItemDeleted(viewModel: viewModel)
    }
}


extension EditListItemPresenter {
    func createDisplayedListItem(listItem: ListItemModel) -> EditListItem.DisplayedListItem {
        
        var displayPromotion: EditListItem.DisplayedPromotion?
        
        if let promotion = listItem.promotion {
            displayPromotion = EditListItem.DisplayedPromotion(name: promotion.name)
        }
        
        return EditListItem.DisplayedListItem(
            name: listItem.name,
            image: listItem.image,
            weight: listItem.weight,
            quantity: listItem.quantity,
            price: listItem.getPrice(),
            promotion: displayPromotion
        )
    }
}
