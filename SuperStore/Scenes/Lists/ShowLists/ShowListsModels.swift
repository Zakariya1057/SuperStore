//
//  ShowListsModels.swift
//  SuperStore
//
//  Created by Zakariya Mohummed on 04/03/2021.
//  Copyright (c) 2021 Zakariya Mohummed. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

enum ShowLists
{
    // MARK: Use cases
    
    enum GetLists
    {
        struct Request
        {
        }
        
        struct Response
        {
            var lists: [ListModel]
            var error: String?
            var offline: Bool = false
        }
        
        struct ViewModel
        {
            var lists: [ListModel]
            var error: String?
            var offline: Bool = false
        }
    }
    
    enum DeleteList
    {
        struct Request
        {
            var indexPath: IndexPath
            var listID: Int
        }
        
        struct Response
        {
            var indexPath: IndexPath
            var error: String?
            var offline: Bool = false
        }
        
        struct ViewModel
        {
            var indexPath: IndexPath
            var error: String?
            var offline: Bool = false
        }
    }
    
    enum SearchList
    {
        struct Request
        {
            var query: String
        }
        
        struct Response
        {
            var lists: [ListModel]
        }
        
        struct ViewModel
        {
            var lists: [ListModel]
        }
    }
    
    enum Offline {
        
        enum DeletedLists
        {
            struct Request
            {
            }
            
            struct Response
            {
                var error: String?
            }
            
            struct ViewModel
            {
                var error: String?
            }
        }
        
        enum EditedLists
        {
            struct Request
            {
            }
            
            struct Response
            {
                var error: String?
            }
            
            struct ViewModel
            {
                var error: String?
            }
        }
        
    }
}
