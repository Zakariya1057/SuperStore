//
//  CreateListInteractor.swift
//  SuperStore
//
//  Created by Zakariya Mohummed on 04/03/2021.
//  Copyright (c) 2021 Zakariya Mohummed. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CreateListBusinessLogic
{
    func createList(request: CreateList.CreateList.Request)
}

protocol CreateListDataStore
{
    //var name: String { get set }
}

class CreateListInteractor: CreateListBusinessLogic, CreateListDataStore
{
    var presenter: CreateListPresentationLogic?
    var listWorker: ListWorker = ListWorker(listAPI: ListAPI())
    var validationWorker: ListValidationWorker = ListValidationWorker()
    
    func createList(request: CreateList.CreateList.Request)
    {
        let name = request.name
        let storeTypeID = request.storeTypeID
        let identifier = UUID().uuidString
        
        let formFields: [ListFormField] = [
            ListFormField(name: "Name", value: name, type: .name),
            ListFormField(name: "Store", value: String(storeTypeID), type: .storeTypeID),
            ListFormField(name: "Identifier", value: identifier, type: .identifier)
        ]
        
        let error = validationWorker.validateFields(formFields)

        if let error = error {
            let response = CreateList.CreateList.Response(error: error)
            presenter?.presentListCreated(response: response)
        } else {
            listWorker.createList(name: name, identifier: identifier, storeTypeID: storeTypeID) { (error: String?) in
                let response = CreateList.CreateList.Response(error: error)
                self.presenter?.presentListCreated(response: response)
            }
        }
    }
}
